@model List<AllTasksDto>

@{
    if (TempData["success"] is not null)
    {
        <div class="alert custom-alert-success mt-5">
            @TempData["success"]
        </div>
    }

    if (TempData["error"] is not null)
    {
        <div class="alert custom-alert-error mt-5">
            @TempData["error"]
        </div>
    }
}

<div class="container-fluid pt-4 px-4">

    @if(Model is null || Model.Count is 0)
    {
        <div class="bg-secondary text-center rounded p-4">
            <div class="d-flex align-items-center justify-content-between mb-4">
                @if (!User.IsInRole("User"))
                {
                    <h6 class="mb-0">Görevler</h6>
                }
                else
                {
                    <h6 class="mb-0">Görevlerim</h6>
                }
                
            </div>

            <div class="alert alert-warning text-center" style="font-size: 1.2rem; padding: 20px; border-radius: 10px;">
                @if (!User.IsInRole("User"))
                {
                    <strong>Henüz görev bulunmuyor.</strong>
                }
                else
                {
                    <strong>Henüz göreviniz bulunmuyor.</strong>
                }
            </div>

        </div>       
    }

    else
    {
        <div class="bg-secondary text-center rounded p-4">
            <div class="d-flex align-items-center justify-content-between mb-4">
                @if (!User.IsInRole("User"))
                {
                    <h6 class="mb-0">Görevler</h6>
                }
                else
                {
                    <h6 class="mb-0">Görevlerim</h6>
                }
               
            </div>
            <div class="table-responsive">
                <table class="table text-start align-middle table-bordered table-hover mb-0">

                    <thead>
                        <tr class="text-white">
                            @if (!User.IsInRole("User"))
                            {
                                <th scope="col">Görev Sahibi</th>
                            }                   
                            <th scope="col">Başlık</th>
                            <th scope="col">Açıklama</th>
                            <th scope="col">Durum</th>
                            <th scope="col">Oluşturulma Tarihi</th>
                            <th scope="col">Atanma Tarihi</th>
                            <th scope="col">Bitiş Tarihi</th>
                        </tr>
                    </thead>

                    <tbody>

                        @foreach (var item in Model)
                        {
                            <tr>
                                @if (!User.IsInRole("User"))
                                {
                                    <td>@(string.IsNullOrEmpty(item.Username) ? "Henüz atanmadı" : item.Username)</td>
                                }
                                <td><a href="/task-details/@item.Id">@item.Title</a></td>

                                <td>@item.Description</td>
                                <td>@(item.IsCompleted ? "Tamamlandı" : "Tamamlanmadı")</td>
                                <td>@item.CreatedAt.ToString("dd MMMM yyyy")</td>
                                <td> @(item.AssignedAt == null ? "Henüz atanmadı" : item.AssignedAt.Value.ToString("dd MMMM yyyy"))</td>
                                <td>@item.EndDate.ToString("dd MMMM yyyy")</td>
                            </tr>
                        }

                    </tbody>
                </table>
            </div>
        </div>
    }

</div>

<style>
    .custom-alert-success {
        position: fixed; /* Sayfada sabit konumlandırma */
        top: 25px; /* Ekranın üst kısmından 10px boşluk */
        left: 58%; /* Ekranın ortasına hizalama */
        transform: translateX(-50%); /* Ortalamak için translate */
        z-index: 1000; /* Diğer elementlerin üstünde görünmesini sağlar */
        background-color: wheat; /* Arka plan rengi */
        color: #6b4f3a; /* Yazı rengi (daha koyu bir ton) */
        padding: 10px 20px;
        border-radius: 5px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    }

    .custom-alert-error {
        position: fixed; /* Sayfada sabit konumlandırma */
        top: 25px; /* Ekranın üst kısmından 10px boşluk */
        left: 58%; /* Ekranın ortasına hizalama */
        transform: translateX(-50%); /* Ortalamak için translate */
        z-index: 1000; /* Diğer elementlerin üstünde görünmesini sağlar */
        background-color: #f8d7da;
        color: #721c24;
        padding: 10px 20px;
        border-radius: 5px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    }
</style>