@model List<AllTasksDto>

@{
    if (TempData["success"] is not null)
    {
        <div class="alert custom-alert-success mt-5">
            @TempData["success"]
        </div>
    }

    if (TempData["error"] is not null)
    {
        <div class="alert custom-alert-error mt-5">
            @TempData["error"]
        </div>
    }
}

<div class="container-fluid pt-4 px-4">
    @if (User.IsInRole("Admin"))
    {
        <div class="d-flex justify-content-between align-items-center">
            <h6 class="mb-0">Görevler</h6>
            <div class="d-flex">
                <select id="userSelect" class="form-select me-2">
                    <option value="">Tüm Kullanıcılar</option>
                    @foreach (var user in ViewBag.UserSelectList)
                    {
                        <option value="@user.Value">@user.Text</option>
                    }
                </select>
            </div>
        </div>
    }

    else
    {
        <div class="d-flex justify-content-between align-items-center">
            <h6 class="mb-0">Görevlerim</h6>
        </div>
    }

    <div id="taskList" class="bg-secondary text-center rounded p-4 mt-4">
        @if (Model == null || Model.Count == 0)
        {
            <div class="alert alert-warning text-center" style="font-size: 1.2rem; padding: 20px; border-radius: 10px;">
                <strong>Görev bulunmuyor.</strong>
            </div>
        }
        else
        {
            <div class="table-responsive">
                <table class="table text-start align-middle table-bordered table-hover mb-0">
                    <thead>
                        <tr class="text-white">
                            <th scope="col">Görev Sahibi</th>
                            <th scope="col">Başlık</th>
                            <th scope="col">Açıklama</th>
                            <th scope="col">Durum</th>
                            <th scope="col">Oluşturulma Tarihi</th>
                            <th scope="col">Atanma Tarihi</th>
                            <th scope="col">Bitiş Tarihi</th>
                        </tr>
                    </thead>
                    <tbody id="taskTableBody">
                        @foreach (var item in Model)
                        {
                            <tr data-user-id="@item.UserId">
                                <td>@(string.IsNullOrEmpty(item.Username) ? "Henüz atanmadı" : item.Username)</td>
                                <td><a href="/task-details/@item.Id">@item.Title</a></td>
                                <td>@item.Description</td>
                                <td>@(item.IsCompleted ? "Tamamlandı" : "Tamamlanmadı")</td>
                                <td>@item.CreatedAt.ToString("dd MMMM yyyy")</td>
                                <td>@(item.AssignedAt == null ? "Henüz atanmadı" : item.AssignedAt.Value.ToString("dd MMMM yyyy"))</td>
                                <td>@item.EndDate.ToString("dd MMMM yyyy")</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
    </div>
</div>




<style>
    .custom-alert-success {
        position: fixed; /* Sayfada sabit konumlandırma */
        top: 25px; /* Ekranın üst kısmından 10px boşluk */
        left: 58%; /* Ekranın ortasına hizalama */
        transform: translateX(-50%); /* Ortalamak için translate */
        z-index: 1000; /* Diğer elementlerin üstünde görünmesini sağlar */
        background-color: wheat; /* Arka plan rengi */
        color: #6b4f3a; /* Yazı rengi (daha koyu bir ton) */
        padding: 10px 20px;
        border-radius: 5px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    }

    .custom-alert-error {
        position: fixed; /* Sayfada sabit konumlandırma */
        top: 25px; /* Ekranın üst kısmından 10px boşluk */
        left: 58%; /* Ekranın ortasına hizalama */
        transform: translateX(-50%); /* Ortalamak için translate */
        z-index: 1000; /* Diğer elementlerin üstünde görünmesini sağlar */
        background-color: #f8d7da;
        color: #721c24;
        padding: 10px 20px;
        border-radius: 5px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    }

    form .form-select {
        background-color: #333;
        color: #fff;
        border: 1px solid #555;
        border-radius: 5px;
        padding: 5px;
    }

        form .form-select:focus {
            outline: none;
            border-color: #777;
        }

</style>

<script>

    document.addEventListener("DOMContentLoaded", function () {
        var userSelect = document.getElementById("userSelect");
        var taskTableBody = document.getElementById("taskTableBody");
        var allRows = Array.from(taskTableBody.rows);
        var noTasksMessage = document.createElement("div");
        noTasksMessage.classList.add("alert", "alert-warning", "text-center");
        noTasksMessage.style.fontSize = "1.2rem";
        noTasksMessage.style.padding = "20px";
        noTasksMessage.style.borderRadius = "10px";
        noTasksMessage.style.display = "none";
        noTasksMessage.innerHTML = "<strong>Seçili kullanıcı için görev bulunmuyor.</strong>";
        document.getElementById("taskList").appendChild(noTasksMessage);

        userSelect.addEventListener("change", function () {
            var selectedUserId = this.value;
            var hasTasks = false;

            // Filtrelemeyi gerçekleştirin
            allRows.forEach(function (row) {
                if (selectedUserId === "" || row.dataset.userId === selectedUserId) {
                    row.style.display = "";
                    hasTasks = true;
                } else {
                    row.style.display = "none";
                }
            });

            // Eğer görev yoksa tabloyu gizle ve mesajı göster
            var table = document.querySelector("#taskList table");
            if (hasTasks) {
                table.style.display = "";
                noTasksMessage.style.display = "none";
            } else {
                table.style.display = "none";
                noTasksMessage.style.display = "block";
            }
        });
    });

</script>